{
  "Comment": "A3 Job Distributor Step Function",
  "StartAt": "ProcessPayloadForRecursion",
  "States": {
    "ProcessPayloadForRecursion": {
      "Type": "Task",
      "Resource": "arn:aws:states:::lambda:invoke",
      "OutputPath": "$.Payload",
      "Parameters": {
        "Payload.$": "$",
        "FunctionName": "arn:aws:lambda:us-east-1:112757862110:function:ProcessPayloadForRecursion"
      },
      "Retry": [
        {
          "ErrorEquals": [
            "Lambda.ServiceException",
            "Lambda.AWSLambdaException",
            "Lambda.SdkClientException"
          ],
          "IntervalSeconds": 2,
          "MaxAttempts": 5,
          "BackoffRate": 2
        }
      ],
      "Next": "RecurseIfRequired"
    },
    "RecurseIfRequired": {
      "Type": "Choice",
      "Choices": [
        {
          "Variable": "$.delta_docs_batches",
          "IsPresent": true,
          "Next": "RecurseToMoreDistributors"
        }
      ],
      "Default": "RunDeltaDocsTransformation"
    },
    "RecurseToMoreDistributors": {
      "Type": "Map",
      "ItemsPath": "$.delta_docs_batches",
      "Parameters": {
        "delta_docs_batch.$": "$$.Map.Item.Value",
        "execution_id.$": "$.execution_id",
        "max_parallel_executions.$": "$.max_parallel_executions"
      },
      "Iterator": {
        "StartAt": "Recurse",
        "States": {
          "Recurse": {
            "Type": "Task",
            "Resource": "arn:aws:states:::states:startExecution.sync:2",
            "Parameters": {
              "Input": {
                "max_parallel_executions.$": "$.max_parallel_executions",
                "AWS_STEP_FUNCTIONS_STARTED_BY_EXECUTION_ID.$": "$$.Execution.Id",
                "execution_id.$": "$$.Execution.Id",
                "delta_docs_to_run.$": "$.delta_docs_batch.delta_docs_to_run"
              },
              "StateMachineArn.$": "$$.StateMachine.Id",
              "Name.$": "States.Format('{}_batch{}', $$.Execution.Name, $['delta_docs_batch']['batch_id'])"
            },
            "ResultSelector": {"ExecName.$": "$$.Execution.Name"},
            "Retry": [
              {
                "ErrorEquals": [
                  "StepFunctions.ExecutionAlreadyExistsException"
                ],
                "IntervalSeconds": 1,
                "BackoffRate": 5,
                "MaxAttempts": 1
              },
              {
                "ErrorEquals": [
                  "States.ALL"
                ],
                "IntervalSeconds": 1,
                "BackoffRate": 2,
                "MaxAttempts": 5
              }
            ],
            "End": true
          }
        }
      },
      "End": true
    },
    "RunDeltaDocsTransformation": {
      "Type": "Map",
      "ItemsPath": "$.delta_docs_to_run",
      "Parameters": {
        "delta_docs_data.$": "$$.Map.Item.Value",
        "execution_id.$": "$.execution_id"
      },
      "Iterator": {
        "StartAt": "TransformDocumentData",
        "States": {
          "TransformDocumentData": {
            "Type": "Task",
            "Resource": "arn:aws:states:::lambda:invoke",
            "Parameters": {
              "FunctionName": "arn:aws:lambda:us-east-1:112757862110:function:TransformDocumentData"
            },
            "ResultPath": null,
            "Retry": [
              {
                "ErrorEquals": [
                  "Lambda.ServiceException",
                  "Lambda.AWSLambdaException",
                  "Lambda.SdkClientException"
                ],
                "IntervalSeconds": 2,
                "MaxAttempts": 5,
                "BackoffRate": 2
              }
            ],
            "End": true
          }
        }
      },
      "End": true
    }
  }
}